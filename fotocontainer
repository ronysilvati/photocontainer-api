#!/usr/bin/env php

<?php
require 'vendor/autoload.php';

use Symfony\Component\Console\Application;
use PhotoContainer\PhotoContainer\Application\Shell\EmailPoolConsumer;
use PhotoContainer\PhotoContainer\Application\Shell\ImageProcessorConsumer;
use Doctrine\Common\Cache\ApcuCache;
use Doctrine\Common\Cache\ArrayCache;

define('ROOT_DIR', __DIR__);
define('CACHE_DIR', ROOT_DIR.'/cache');
define('LOG_DIR', ROOT_DIR.'/logs');
define('DEBUG_MODE', true);

if (is_file(ROOT_DIR.'/public/.env')) {
    $dotenv = new Dotenv\Dotenv(ROOT_DIR.'/public');
    $dotenv->overload();
}

$builder = new \DI\ContainerBuilder();

if (getenv('ENVIRONMENT') === 'prod') {
    $cache = new ApcuCache();
} else {
    $cache = new ArrayCache();
}
$cache->setNamespace('PhotoContainer_cli');

$builder->setDefinitionCache($cache);

$builder->addDefinitions(ROOT_DIR.'/public/config.php');
$builder->addDefinitions(ROOT_DIR.'/src/Application/Resources/services.php');

$builder->writeProxiesToFile(true, CACHE_DIR);

$container = $builder->build();

$application = new Application();

$application->add(
    new EmailPoolConsumer(
        'EmailPool',
        $container->get(\Interop\Queue\PsrContext::class),
        $container->get('EmailTransport')
    )
);
$application->add(new ImageProcessorConsumer('ImagePool', $container->get(\Interop\Queue\PsrContext::class)));
$application->add(new \PhotoContainer\PhotoContainer\Application\Shell\InstallDatabase());
$application->add(new \PhotoContainer\PhotoContainer\Application\Shell\Cache());
$application->add(new \PhotoContainer\PhotoContainer\Application\Shell\Verify('Verify', $container));

$application->run();